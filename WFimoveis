import React, { useState } from 'react';
import {
  View,
  Text,
  TextInput,
  Button,
  FlatList,
  StyleSheet,
  TouchableOpacity,
  Alert,
} from 'react-native';

const App = () => {
  const [imoveis, setImoveis] = useState([]);
  const [form, setForm] = useState({
    construtora: '',
    empreendimento: '',
    bairro: '',
    valor: '',
    dataEntrega: '',
  });
  const [editIndex, setEditIndex] = useState(null);

  const handleChange = (field, value) => {
    setForm({ ...form, [field]: value });
  };

  const handleCadastrar = () => {
    if (
      form.construtora &&
      form.empreendimento &&
      form.bairro &&
      form.valor &&
      form.dataEntrega
    ) {
      if (editIndex !== null) {
        const updatedImoveis = [...imoveis];
        updatedImoveis[editIndex] = form;
        setImoveis(updatedImoveis);
        setEditIndex(null);
      } else {
        setImoveis([...imoveis, form]);
      }
      setForm({ construtora: '', empreendimento: '', bairro: '', valor: '', dataEntrega: '' });
    } else {
      Alert.alert('Erro', 'Preencha todos os campos.');
    }
  };

  const handleEditar = (index) => {
    setForm(imoveis[index]);
    setEditIndex(index);
  };

  const handleExcluir = (index) => {
    Alert.alert('Confirmação', 'Deseja excluir este imóvel?', [
      { text: 'Cancelar', style: 'cancel' },
      {
        text: 'Excluir',
        onPress: () => setImoveis(imoveis.filter((_, i) => i !== index)),
      },
    ]);
  };

  const renderImovel = ({ item, index }) => (
    <View style={styles.imovel}>
      <Text>Construtora: {item.construtora}</Text>
      <Text>Empreendimento: {item.empreendimento}</Text>
      <Text>Bairro: {item.bairro}</Text>
      <Text>Valor: R$ {item.valor}</Text>
      <Text>Data de Entrega: {item.dataEntrega}</Text>
      <View style={styles.actions}>
        <Button title="Editar" onPress={() => handleEditar(index)} />
        <Button title="Excluir" onPress={() => handleExcluir(index)} color="red" />
      </View>
    </View>
  );

  return (
    <View style={styles.container}>
      <Text style={styles.title}>WF Imóveis</Text>
      <TextInput
        style={styles.input}
        placeholder="Construtora"
        value={form.construtora}
        onChangeText={(value) => handleChange('construtora', value)}
      />
      <TextInput
        style={styles.input}
        placeholder="Empreendimento"
        value={form.empreendimento}
        onChangeText={(value) => handleChange('empreendimento', value)}
      />
      <TextInput
        style={styles.input}
        placeholder="Bairro"
        value={form.bairro}
        onChangeText={(value) => handleChange('bairro', value)}
      />
      <TextInput
        style={styles.input}
        placeholder="Valor"
        value={form.valor}
        onChangeText={(value) => handleChange('valor', value)}
        keyboardType="numeric"
      />
      <TextInput
        style={styles.input}
        placeholder="Data de Entrega"
        value={form.dataEntrega}
        onChangeText={(value) => handleChange('dataEntrega', value)}
      />
      <Button
        title={editIndex !== null ? 'Salvar Alterações' : 'Cadastrar'}
        onPress={handleCadastrar}
      />
      <FlatList
        data={imoveis}
        keyExtractor={(_, index) => index.toString()}
        renderItem={renderImovel}
      />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 20,
    backgroundColor: '#f5f5f5',
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
    textAlign: 'center',
  },
  input: {
    height: 40,
    borderColor: '#ccc',
    borderWidth: 1,
    marginBottom: 10,
    paddingHorizontal: 8,
    borderRadius: 4,
    backgroundColor: '#fff',
  },
  imovel: {
    padding: 10,
    borderWidth: 1,
    borderColor: '#ddd',
    borderRadius: 4,
    marginBottom: 10,
    backgroundColor: '#fff',
  },
  actions: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginTop: 10,
  },
});

export default App;
